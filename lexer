import java.util.*;
import java.io.*;

/* semantic value of token returned by scanner */

public class lexer
{
	public static void main (String[] args) throws IOException
	{
		BufferedReader reader = new BufferedReader(new FileReader("input.hs"));
		BufferedWriter writer = new BufferedWriter(new FileWriter("output.txt"));
		Yylex yy = new Yylex (reader);
		while(true)
		{
			String x =yy.next_token();
			if(x==null)
				break;
			writer.write(x);	
			writer.write('\n');
		}
		reader.close();
		writer.close();
	}
}

%%
%function next_token
%type String

%eofval{
  return null;
%eofval}

%{
  public String sourceFilename;
%}
%state COMMENT
%state LONGCOMMENT
%state LONGCOMMENT2

FRS=(Show|Eq)
DATATYPES=(String|Bool)
KEYWORD=(data|deriving|type|if|then|else|where)
ALPHA=[A-Za-z]
DIGIT=[0-9]
ALPHA_NUMERIC={ALPHA}|{DIGIT}
IDENTIFIER={ALPHA}({ALPHA_NUMERIC})*
NUMBER=(([-])?{DIGIT})
WHITE_SPACE=([\ \n\r\t\f\b])+
STRING=\".*\"
%%


<YYINITIAL> "--" {
  yybegin(COMMENT);
}
<COMMENT> [^\n] {
}
<COMMENT> [\n] {
  yybegin(YYINITIAL);
}

<YYINITIAL> "{-" {
  yybegin(LONGCOMMENT);
}
<LONGCOMMENT> [^-] {
}
<LONGCOMMENT> "-" {
  yybegin(LONGCOMMENT2);
}
<LONGCOMMENT2> [^}] {
  yybegin(LONGCOMMENT);
}
<LONGCOMMENT2> "}" {
  yybegin(YYINITIAL);
}


<YYINITIAL> {KEYWORD} { 
  return "KW\t"+ yytext();
}

<YYINITIAL> {WHITE_SPACE} { 
}

<YYINITIAL> {DATATYPES} { 
  return "DT\t" + yytext();
}

<YYINITIAL> {FRS} {
  return "FR\t" + yytext();
}

<YYINITIAL> {IDENTIFIER} { 
  return "ID\t" + yytext();
}

<YYINITIAL> {STRING} {
  return "ST\t" + yytext();
}


<YYINITIAL> "=" {
  return "AO\t=";
}
<YYINITIAL> "->" {
  return "AR\t->";
}
<YYINITIAL> "|" {
  return "BR\t|";
}
<YYINITIAL> ":" {
  return "CL\t:";
}
<YYINITIAL> "++" {
  return "CN\t++";
}
<YYINITIAL> "[]" {
  return "EL\t[]";
}
<YYINITIAL> "==" {
  return "EQ\t==";
}
<YYINITIAL> "," {
  return "FA\t,";
}
<YYINITIAL> ">=" {
  return "GE\t>=";
}
<YYINITIAL> "::" {
  return "HT\t::";
}
<YYINITIAL> "(" {
  return "LB\t(";
}
<YYINITIAL> "{" {
  return "LC\t{";
}
<YYINITIAL> "[" {
  return "LS\t[";
}
<YYINITIAL> ")" {
  return "RB\t)";
}
<YYINITIAL> "}" {
  return "RC\t}";
}
<YYINITIAL> "]" {
  return "RS\t]";
}
<YYINITIAL> ";" {
  return "SM\t;";
}
<YYINITIAL> "_" {
  return "WC\t_";
}

<YYINITIAL> . { 
  return "Undefined\t"+yytext(); 
}
